{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","tests/scatterplot/script.js","script.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","format","d3","time","xScale","scale","yScale","linear","w","h","graphTransform","xstart","ytop","xend","ybottom","transform","x","y","range","xAxis","svg","axis","orient","ticks","yAxis","csv","err","data","zoomed","xAxisContainer","yAxisContainer","event","translate","v","selectAll","attr","d","Date","Mean","parse","Open","parseFloat","Close","xWertebereich","min","max","ΔDate","getTime","yWertebereich","ΔMean","domain","zoom","behavior","scaleExtent","on","graph","select","append","enter","insert"],"mappings":"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","file":"script.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Bestimmen des Zeitformats der Daten (z. B. 2012-02-27)\nvar format = d3.time.format('%Y-%m-%d');\n\n// (Lineare) Skalierung der Achsen mit d3 bestimmen\nvar xScale = d3.time.scale();\nvar yScale = d3.scale.linear();\n\n// Höhe und Breite des gesamten SVG-Elements definieren; Verschiebung des\n// Graphs\nvar w = 850;\nvar h = 400;\nvar graphTransform = {xstart: 50, ytop: 0, xend:0, ybottom:50};\n\n// Global Zoomvariablen\nvar transform = {x:0,y:0};\nvar scale = 1;\n\n// Wertebereich der Achsenskalierungen definieren. Hier ist die Anzahl der Pixel\n// gemeint, über die sich die Achsen erstrecken. Die x-Achse und die y-Achse\n// verschieben wir um 50 nach rechts, damit man die y-Achse beschriften kann.\nxScale.range([0,w - graphTransform.xstart - graphTransform.xend]);\nyScale.range([h - graphTransform.ytop - graphTransform.ybottom, 0]);\n\n// Die Achsen werden von d3 generiert.\nvar xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\").ticks(5);\nvar yAxis = d3.svg.axis().scale(yScale).orient(\"left\").ticks(5);\n\n/**\n * Laden des Datensatzes durch d3, wird in den Array data geladen.\n * @param  {[String]} 'data.csv'            Pfad der csv-Datei\n * @param  {[Function]} function(err, data) callback-Funktion, mit Fehlerelement und\n *                                \t\t\t \t\tDatenarray\n */\nd3.csv('data.csv', function(err, data) {\n\n  // Schleife, um die Einträge zu formatieren\n  for(var i = 0; i<data.length; i++) {\n    // Anwenden des Zeitformats: Konvertieren des Strings in ein Javascript-\n    // Datum.\n    data[i].Date = format.parse(data[i].Date);\n\n    // Konvertieren des String in eine Javascript-Zahl\n    data[i].Open = parseFloat(data[i].Open);\n    data[i].Close = parseFloat(data[i].Close);\n\n    // Berechnen des \"Durchschnittspreises\" für einen Tag\n    data[i].Mean = (data[i].Open + data[i].Close) / 2;\n  }\n\n  /**\n   *  Wertebereich der Daten bestimmen mit d3: Um einen kleinen Abstand zwischen\n   *  den maximalen Punkten und dem Ende des Rändern des Diagrammes zu bewahren,\n   *  wird der Unterschied (Δ) des Minimums und dem untersuchten Wert mit 1.1\n   *  mulitpliziert. Anschliessend wird die Summe des Minimums und des\n   *  multiplizierten Wertes an d3 zurückgegeben.\n   */\n  var xWertebereich = [];\n  xWertebereich[0] = d3.min(data, function(d) {\n    return d.Date;\n  });\n  xWertebereich[1] = d3.max(data, function(d) {\n    var ΔDate = d.Date.getTime() - xWertebereich[0].getTime();\n    ΔDate *= 1.1;\n    return new Date(ΔDate + xWertebereich[0].getTime());\n  });\n\n  var yWertebereich = [];\n  yWertebereich[0] = d3.min(data, function(d) {\n    return d.Mean;\n  });\n  yWertebereich[1] = d3.max(data, function(d) {\n    var ΔMean = d.Mean - yWertebereich[0];\n    return yWertebereich[0] + ΔMean * 1.1;\n  });\n\n  xScale.domain(xWertebereich);\n  yScale.domain(yWertebereich);\n\n  // Zoom hinzufügen, das durch d3 unterstützt wird\n  var zoom = d3.behavior.zoom()\n    .x(xScale)\n    .y(yScale)\n    .scaleExtent([1, 50])\n    .on(\"zoom\", zoomed);\n\n  // die variable graph initialiseren, damit sie in der Funktion zoomed() ver-\n  // wendet werden kann, obwohl sie erst später definiert wird.\n  var graph = null;\n\n  // Mit der Funktion 'zoomed' werden die x-Achse und die y-Achse aktualisiert\n  function zoomed() {\n    // Achsen neu zeichnen\n    xAxisContainer.call(xAxis);\n    yAxisContainer.call(yAxis);\n\n    // Den Graphen entsprechend anpassen:\n\n    // Methode 2: Zoomvariablen setzen und die Position die Punkte transformieren\n    transform.x = d3.event.translate[0];\n    transform.y = d3.event.translate[1];\n    scale = d3.event.scale;\n\n    // Punkte neu berechnen.\n    v.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return xScale(d.Date); })\n      .attr(\"cy\", function(d) { return yScale(d.Mean); });\n  }\n\n  // SVG-Element mit id 'visualization' extrahieren\n  var v = d3.select(\"#visualization\")\n    .attr(\"width\", w)\n    .attr(\"height\", h)\n\n  // Unterstützung für Zoom hinzufügen (d3)\n    .call(zoom);\n\n  // SVG-Maske für den Graph: Wir wollen nicht, dass Punkte aus unserem\n  // definierten Feld auftauchen.\n  v.append(\"mask\")\n    .attr(\"id\", \"mask\")\n    .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", w - graphTransform.xstart - graphTransform.xend)\n      .attr(\"height\", h - graphTransform.ytop - graphTransform.ybottom)\n      .attr(\"fill\", \"white\");\n\n  graph = v.append(\"g\")\n    .attr(\"id\", \"graph\")\n    .attr(\"transform\", \"translate(\" + graphTransform.xstart + \",\" + graphTransform.ytop + \")\")\n    .attr(\"mask\", \"url(#mask)\")\n    .selectAll(\"circle\")\n\n    // Die Daten zum Element mit der d3-Binding-Method binden: Die nach dem\n    // enter() stehenden Befehle werden für alle Elemente in dem Array\n    // ausgeführt.\n    .data(data).enter()\n    .append(\"circle\")\n      .attr(\"class\", \"data-point\")\n      .attr(\"cx\", function(d) { return xScale(d.Date); })\n      .attr(\"cy\", function(d) { return yScale(d.Mean); });\n\n  // Achsen hinzufügen\n  var xAxisContainer = v.append(\"g\")\n    .attr(\"class\", \"axis axis-x\")\n    .attr(\"transform\", \"translate(\" +\n      graphTransform.xstart + \",\" +\n      (h - graphTransform.ybottom) + \")\")\n    .call(xAxis);\n\n  var yAxisContainer = v.append(\"g\")\n    .attr(\"class\", \"axis axis-y\")\n    .attr(\"transform\", \"translate(50,0)\")\n    .call(yAxis);\n\n  // Maus-Koordinaten: Um auf die Maus-Koordinaten zugreifen zu können, muss man\n  // ein unsichtbares Element über den gesamten Graph legen, der alle\n  // 'Maus-Events' \"aufnimmt\". Ein leerer g-SVG-Container (wie 'graph') ist\n  // nicht fähig, Maus-Events aufzunehmen.\n  v.insert(\"rect\", \":first-child\")\n    .attr(\"id\", \"overlay\")\n    .attr(\"x\", 0)\n    .attr(\"y\", 0)\n    .attr(\"width\", w - graphTransform.xstart - graphTransform.xend)\n    .attr(\"height\", h - graphTransform.ytop - graphTransform.ybottom)\n    .on(\"mousemove\", function(){\n      // Benutzerdefiniert... In diesem Beispiel nicht gebraucht.\n    });\n});\n",null],"sourceRoot":"/source/"}